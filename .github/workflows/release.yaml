on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  ko-resolve:
    name: Release ko artifact
    runs-on: ubuntu-latest

    # https://docs.github.com/en/actions/reference/authentication-in-a-workflow
    permissions:
      id-token: write  # undocumented OIDC support.
      packages: write
      contents: read

    env:
      GOPATH: ${{ github.workspace }}
      GO111MODULE: on
      GOFLAGS: -ldflags=-s -ldflags=-w -tags=nostackdriver
      KO_DOCKER_REPO: ghcr.io/vaikas
      KOFLAGS: --platform=linux/amd64,linux/arm64 -P
      COSIGN_EXPERIMENTAL: "true"

    steps:
    - name: Set up Go 1.17.x
      uses: actions/setup-go@v1
      with:
        go-version: 1.17.x

    - name: Add GOPATH/bin to PATH
      shell: bash
      run: |
        echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
        echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

    - name: Setup ko
      run: |
        echo '::group:: install ko'
        go install github.com/google/ko@main
        echo '::endgroup::'

    - name: Install cosign
      uses: sigstore/cosign-installer@main

    - name: Log into ghcr.io
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GH_REPO_PAT }}

    - name: Check out code onto GOPATH
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        path: ./src/github.com/${{ github.repository }}

    - name: Get Release URL
      id: get_release_url
      uses: bruceadams/get-release@v1.2.0
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Build and Publish images, Produce release artifact.
      working-directory: ./src/github.com/${{ github.repository }}
      run: |
        echo "Doing ko resolve for config"
        # Build a big bundle of joy, this also produces SBOMs
        ko resolve --tags $(basename "${{ github.ref }}" ),latest -BRf ./config --platform=all --image-refs imagerefs > release.yaml

        # arm64 uses mysql/mysql-server but it doesn't seem to work correctly
        # as is in github actions, because it wants to change the filesystem.
        # TODO(vaikas): Find a way to use the same image, for now, hack and
        # use different image for amd and arm until I sort it out.
        # https://github.com/vaikas/sigstore-scaffolding/issues/28
        sed -e 's@mysql:8.0@mysql/mysql-server:8.0@' release.yaml > release-arm.yaml

        echo "Doing ko resolve for testdata"
        # Build a big bundle of test joy, this also produces SBOMs
        ko resolve --tags $(basename "${{ github.ref }}" ),latest -BRf ./testdata --platform=all --image-refs testimagerefs > testrelease.yaml

        echo "Signing images"
        # Sign all the images
        for i in `cat imagerefs testimagerefs`; do
          cosign sign $i
        done

    - name: Upload Core Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_REPO_PAT }}
      with:
        upload_url: ${{ steps.get_release_url.outputs.upload_url }}
        asset_path: ./src/github.com/${{ github.repository }}/release.yaml
        asset_name: release.yaml
        asset_content_type: text/plain

    - name: Upload Core ARM Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_REPO_PAT }}
      with:
        upload_url: ${{ steps.get_release_url.outputs.upload_url }}
        asset_path: ./src/github.com/${{ github.repository }}/release-arm.yaml
        asset_name: release-arm.yaml
        asset_content_type: text/plain

    - name: Upload Test Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_REPO_PAT }}
      with:
        upload_url: ${{ steps.get_release_url.outputs.upload_url }}
        asset_path: ./src/github.com/${{ github.repository }}/testrelease.yaml
        asset_name: testrelease.yaml
        asset_content_type: text/plain

    - name: Upload Create Kind cluster script
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_REPO_PAT }}
      with:
        upload_url: ${{ steps.get_release_url.outputs.upload_url }}
        asset_path: ./src/github.com/${{ github.repository }}/hack/setup-kind.sh
        asset_name: setup-kind.sh
        asset_content_type: text/plain
